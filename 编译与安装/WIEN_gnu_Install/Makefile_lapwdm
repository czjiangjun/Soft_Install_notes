###############################################################################
#                                                                             #
#                        Generic Makefile for lapwdm                          #
#                                                                             #  
#  make           ... generate executable for the REAL-version                #
#  make complex   ... generate executable for the COMPLEX-version             #
#  make clean     ... delete unnecessary files                                #
#                                                                             #
###############################################################################

SHELL = /bin/sh

###############################################################################
#                           User defined variables                            #
###############################################################################

#---------------- compiler -----------------
FC = gfortran
CC = gcc

#------------- compiler options ------------
FOPT     = -ffree-form -O2 -ffree-line-length-none
FGEN     =

#-------------- loader options -------------
LDFLAGS  = $(FOPT) -L../SRC_lib
R_LIBS   = /home/jun-jiang/.local/lib/libopenblas_nehalemp-r0.3.24.a /home/jun-jiang/.local/lib/liblapack.a -lpthread
C_LIBS   = $(R_LIBS)

###############################################################################
#                       End of user defined variables                         #
###############################################################################

DESTDIR	= ./
R_EXECNAME = lapwdm
C_EXECNAME = lapwdmc

###############################################################################

TYPE='REAL'
TYPE_COMMENT='!_REAL'
FFLAGS = $(FGEN) $(FOPT)
R_EXEC = $(DESTDIR)$(R_EXECNAME)
C_EXEC = $(DESTDIR)$(C_EXECNAME)

#..............................................................................
#
#  Object files common to both REAL and COMPLEX type subroutines
#
#
OBJS    = reallocate.o modules.o abc.o angle.o atpar.o dvbes1.o dmat.o\
          errclr.o errflg.o euler.o diracout.o dergl.o  \
          gtfnam2.o harmon.o inispl.o \
          inverss.o l2main.o lmtmat.o lapwdm.o  latgen.o outerr.o \
          outwin.o orb.o ph.o rint13.o inouh.o inth.o \
          rotate.o rotdef.o sphbes.o  symop.o t3j.o\
          SymmRot.o symmetrization.o ylm.o cputim.o mknam.o \
          xsplt.o locmat.o timeinv.o sym.o readw.o\
          radint.o rout.o lomain.o spin.o couplx.o printx.o xoper.o\
          xqproduct.o symmso.o addtinvso.o addtinv.o output.o 


#..............................................................................
#
#  Object files for REAL and COMPLEX versions
#
R_OBJS = $(OBJS) 
C_OBJS = $(OBJS)

#..............................................................................
#
#  Some source files contain both REAL and COMPLEX versions. These files
#  have the file extension '.frc' and must be treated differently.
#
.SUFFIXES:	.frc

#..............................................................................
#
#  Build executable (either REAL or COMPLEX versions)
#
real: rm_c_files
	$(MAKE) TYPE='REAL' TYPE_COMMENT='!_REAL' $(R_EXEC)

complex: rm_r_files
	$(MAKE) TYPE='COMPLEX' TYPE_COMMENT='!_COMPLEX' $(C_EXEC)

#..............................................................................

$(R_EXEC): $(R_OBJS)
	$(FC) -o $(R_EXEC) $(R_OBJS) $(LDFLAGS) $(R_LIBS)

$(C_EXEC): $(C_OBJS)
	$(FC) -o $(C_EXEC) $(C_OBJS) $(LDFLAGS) $(C_LIBS)

rm_c_files:
	if [ -f .complex ]; then \
	   $(MAKE) clean; \
	fi
	touch .real

rm_r_files:
	if [ -f .real ]; then \
	   $(MAKE) clean; \
	fi
	touch .complex

#..............................................................................
#
#  All routines depend upon an include file (contains common PARAMETERS)
#
$(R_OBJS):		
$(C_OBJS):		

#..............................................................................
#
#  remove unnecessary files (executable(s) are not removed)
#
# Dependancies
$(OBJS):		Makefile

all: 
	make real complex

clean:
	-rm -f *.o _tmp_.* *.P .real .complex *.mod

#..............................................................................
#
#  define inference rules to generate object files from source files
#  (From .frc files the appropriatly typed subroutine (REAL/COMPLEX) has to
#  be extracted first.)
#
.c.o:
	$(CC)  -c $<
.f.o:
	$(FC) $(FFLAGS) -c $<
.frc.o:
	@sed -e 's/^$(TYPE_COMMENT)//'   $< >$*_tmp.f
	@echo "$<: $(TYPE) version extracted"
	$(FC) $(FFLAGS) -c $*_tmp.f
	mv $*_tmp.o $*.o
	rm $*_tmp.f
